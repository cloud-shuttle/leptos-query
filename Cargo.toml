[package]
name = "leptos-query-rs"
version = "0.5.0"
edition = "2021"
authors = ["CloudShuttle Team"]
description = "A powerful, type-safe data fetching and caching library for Leptos 0.8 applications"
license = "MIT"
repository = "https://github.com/cloud-shuttle/leptos-query-rs"
keywords = ["leptos", "query", "cache", "data-fetching", "rust"]
categories = ["web-programming", "asynchronous", "caching"]
readme = "README.md"
rust-version = "1.70"

[features]
default = ["csr", "native"]
csr = []
ssr = ["native"]
hydrate = []
devtools = []
persistence = []
offline = ["persistence"]
native = ["tokio", "reqwest"]
wasm = []

[dependencies]
# Core Leptos 0.8 dependencies
leptos = { version = "0.8", features = ["csr", "ssr"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Async runtime (only for non-WASM targets)
tokio = { version = "1.0", features = ["rt-multi-thread", "macros", "time"], optional = true }

# HTTP client (only for native targets)
reqwest = { version = "0.11", features = ["json"], optional = true }

# UUID generation
uuid = { version = "1.0", features = ["v4", "js", "serde"] }

# Async traits
async-trait = "0.1"

# Base64 encoding/decoding
base64 = "0.21"

# Concurrency primitives
parking_lot = "0.12"

# Error handling
thiserror = "1.0"

# Time utilities
chrono = { version = "0.4", features = ["serde"] }

# Futures
futures = "0.3"

# Web APIs
web-sys = { version = "0.3", features = ["console", "Storage"] }
js-sys = "0.3"
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"

# Development dependencies
[dev-dependencies]
wasm-bindgen-test = "0.3"
wasm-bindgen = "0.2"
js-sys = "0.3"
web-sys = { version = "0.3", features = ["console"] }
criterion = "0.7"
rand = "0.9"
proptest = "1.4"
# mutagen = "0.1"  # Not available, using manual mutation testing instead
# mutagen-runner = "0.1"


[lib]
name = "leptos_query_rs"
path = "src/lib.rs"

[[example]]
name = "basic_usage"
required-features = ["csr"]

[[example]]
name = "advanced_usage"
required-features = ["csr"]

[[bench]]
name = "query_benchmarks"
harness = false

[[test]]
name = "query_lifecycle_tests"
path = "tests/unit/query_lifecycle_tests.rs"

[[test]]
name = "cache_operations_tests"
path = "tests/unit/cache_operations_tests.rs"

[[test]]
name = "property_tests"
path = "tests/property/cache_invariants.rs"

[[test]]
name = "mutation_tests"
path = "tests/mutation/manual_mutation_tests.rs"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]